================================================================================================
class Actor 設計									  
================================================================================================
													
@ Field												
public: ----------------------------------------------------------------------------------------
													|
	Surface				_surface					|	... サーフェイス操作用
	EffectManager		_effect 					|	... エフェクト操作用
	Collision			_collision					|	... コリジョン操作用
													|
protected: -------------------------------------------------------------------------------------
													|
	bool				_isTimeScale				|	... unscaleTime deltaTime 切り替え用 
	bool				_isDestroy					|	... Active切り替え用
													|
private: ---------------------------------------------------------------------------------------
													|
	List<MeshRenderer>	model						|	... サーフェイスターゲットリスト
													|
@ Property											
public: ----------------------------------------------------------------------------------------
													|
	Transform			GetSetTtansform				|	... 自動実装 Transform
	ActorState			GetSetActorState			|	... 自動実装 ActorState
	GameObject			GetSetTarget				|	... 自動実装 ターゲットオブジェクト
													
@ Method											
private: ---------------------------------------------------------------------------------------
													|
	tmplate<T>			GetActor<T>		()			|	... 継承元取得用
	tmplate<T>			GetActorType	()			|	... 継承型取得用
	float				GetSetDeltaTime	(bool)		|	... TimeScale取得、切り替え
	void				FindManager		()			|	... マネージャーの取得
													|
@ UnityMethod										|
													|
	Start											|
		FindManager();								|
													|
	OnDestory()										|
		_surface release							|
													
================================================================================================
enum RESIST 設計									  
================================================================================================
													|
	NONE											|	... なし
	NORMAL											|	... 通常攻撃への耐性
	SPECIAL											|	... 特殊攻撃への耐性
													|
================================================================================================
struct ActorState 設計							  
================================================================================================
													
@ Field												
public: ----------------------------------------------------------------------------------------
													|
	int					_life						|	... 残機
	float				_hp							|	...	体力
	float				_defence					|	... 防御力
	bool				_invincible					|	... 無敵設定
	enum RESIST			_resist						|	... 耐性
													|
@ Method											
public: -----------------------------------------------------------------------------------------
													|
	void				SetDamage	(float)			|	... ダメージ処理
													|
private: ----------------------------------------------------------------------------------------
													|
	void				CalcLife	()				|	... 残機処理
	void				CalcHp		()				|	... 体力処理
													
=================================================================================================
class Player 設計 : class Actor 継承				 
=================================================================================================
													
=================================================================================================
class Enemy 設計 : class Actor 継承					
=================================================================================================
													
@ Field												
public: -----------------------------------------------------------------------------------------
													|
ptivate: ----------------------------------------------------------------------------------------
													|
	enum GRADE			_grade						|	... エネミーのランク
	float				_activeCount				|	... 出現からの時間;
	float				_activeTime					|	... 生存時間;
	PlayableAsset		_encountTL					|	... 開始
	PlayableAsset		_generalTL					|	... 経過
	PlayableAsset		_returnTL					|	... 終了
													
=================================================================================================
enum GRADE 設計									  
=================================================================================================
													|
	NONE											|	... なし
	LOW												|	... 低レベル
	NORMAL											|	... 通常
	HIGH											|	... 高レベル
	BOSS											|	... BOSS
	ENDBOSS											|	... ラスボス
													|
=================================================================================================
class Bullet 設計 : class Actor 継承				 
=================================================================================================
													
@ Field												
private: ----------------------------------------------------------------------------------------
													|
	enum ORBIT			_orbit						|	... 軌道タイプ
	float				_damegeTime					|	... ダメージ判定の発生時間
	float				_flightTIme					|	... 飛行時間
	bool				_isWait						|	... 発射時ロック
	Vector3				_lunchVector				|	... 発射方向
	GameObject			target						|	... ターゲット情報
	Vector3				muzzle						|	... 発射位置
													|
@ Method											
public: -----------------------------------------------------------------------------------------
													|
	void				StartBullet		()			|	... 発射制御分岐
private: ----------------------------------------------------------------------------------------
													|
	void				ActiveCollision	(bool)		|	... 衝突判定OnOff
	void				DissolveDisable	()			|	... 弾削除用
	void				AnyOrbit		()			|	... 弾制御
													
=================================================================================================
enum ORBIT 設計									  
=================================================================================================
													|
	NONE											|	... なし
	SHOT											|	... 通常攻撃
	HOMING											|	... ホーミング
	UNTRACK											|	... 追尾なしホーミング
	THROW											|	... 投擲
	BLADE											|	... 高さ参照
	ENVIRONMENT										|	... 環境オブジェクト
	BOMB											|	... 画面全範囲
	DOT												|	... 継続
													|
=================================================================================================
struct ItemEffect 設計								
=================================================================================================

@ Field												
public: -----------------------------------------------------------------------------------------
													|
	Actor				_target						|	... ターゲット情報取得
	float				_time						|	... 時間
	float				_value						|	... 効果量
	AnimationCurve		_curve						|	... エフェクト強度
	bool				_isEffect					|	... 再生判定
													|
=================================================================================================
class Item 設計 : class Actor 継承					
=================================================================================================
													
@ Field												
public: -----------------------------------------------------------------------------------------
													|
	ITEMTYPE			_itemType					|	... アイテムタイプ
	ItemEffect			_effectParam				|	... エフェクト再生データ
													|
private: ----------------------------------------------------------------------------------------
													|
	void				CalcItemEvent				|	... アイテム処理呼び出し
	void				AnyItem						|	... 各種アイテム処理
													
=================================================================================================
enum ITEMTYPE 設計									
=================================================================================================
													|
	NONE											|	... なし
	INVINCIBLE										|	... 無敵
	TURBO											|	... 加速
	HEAL											|	... 体力回復
	LIFEBOX											|	... 残機回復
													|
=================================================================================================
class ActorData 設計 
=================================================================================================
													
@ Field												
protected:---------------------------------------------------------------------------------------
													|
	Actor				_actor						|	... Actor参照用
													|
@ Method											|
private: ---------------------------------------------------------------------------------------
													|
	void				SetActor		()			|	... Actor取得用
													|

================================================================================================
struct TargetSystem 設計	
================================================================================================
													
@ Field												
public: ----------------------------------------------------------------------------------------
													|
	bool				_isSafetyLock				|	... 発射処理の無効判定
	TargetList			targetList					|	... ターゲットリスト
	WeaponList			weaponList					|	...	武器リスト
	int					_targetIndex				|	... ターゲットリストインデックス
	int					_weaponIndex				|	... ウェポンリストインデックス
													
=================================================================================================
class PlayerFire 設計 : class ActorData 継承					
=================================================================================================

@ Field												
protected:---------------------------------------------------------------------------------------
													|
	TragetSystem		_targetSystem				|	... ターゲットシステム 
	Vector3				aimTarget					|	... Aim時の参照位置
													|
@ Method											
public: ------------------------------------------------------------------------------------------
													|
	void				AddWeaponIndex	()			|
	void				SubWeaponIndex	()			|

=================================================================================================
class EnemyFire 設計 : class ActorData 継承					
=================================================================================================

@ Field												
protected: --------------------------------------------------------------------------------------
													|
	TragetSystem		_targetSystem				|	... ターゲットシステム 
													
=================================================================================================
class PlayerMove 設計 : class ActorData 継承					
=================================================================================================

@ Field												
protected:---------------------------------------------------------------------------------------
													|
	AnimationCurve		_blowCurve					|	... ダメージ比率による摩擦係数
	AnimationCurve		_frictionCurve				|	... ダメージ比率による吹き飛ばし係数
	bool				_defaultPos					|	...	復帰位置用ポジション
	bool				_isJump						|	...	ジャンプ判定
	float				_maxSpeed					|	...	Clamp最大スピード
	float				_moveSpeed					|	...	移動スピード
	float				_oldHp						|
													|
@ Method											
public: ------------------------------------------------------------------------------------------
													|
	void				AddWeaponIndex	()			|
	void				SubWeaponIndex	()			|
